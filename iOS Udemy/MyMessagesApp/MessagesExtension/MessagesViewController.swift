//
//  MessagesViewController.swift
//  MessagesExtension
//
//  Created by sebastian on 19/02/17.
//  Copyright © 2017 nhvm. All rights reserved.
//

import UIKit
import Messages

class MessagesViewController: MSMessagesAppViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        
        print("Se accede a la extensión")
        
        // Use this method to configure the extension and restore previously stored state.
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dissmises the extension, changes to a different
        // conversation or quits Messages.
        
        print("Se sale de la extensión")
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
   
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        print("Llego un msj")
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
        print("se esta mandando un mensaje")
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
    
        print("Se dejo de enviar el msj")
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
    
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
    
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }

    @IBAction func enviarMensaje(_ sender: UIButton) {
    
        //let message = "Hola! ¿Como estás?"
        
        // activeConversation?.insertText(message, completionHandler: nil)
        
        /*
         let path = Bundle.main.url(forResource: "audio", withExtension: "mp3")
         
         activeConversation?.insertAttachment(path!, withAlternateFilename: "Saludo de JB", completionHandler: nil)
         */
        
        let layout = MSMessageTemplateLayout.init()
        
        layout.image = UIImage(named: "frogamesLogoFull4")
        
        layout.imageTitle = "Página web de Frogames"
        layout.imageSubtitle = "Aprende a crear apps y juegos para iOS"
        layout.caption = "Ir ahora a la web"
        
        layout.trailingCaption = "trailing caption"
        layout.trailingSubcaption = "trailing subcaption"
        
        layout.mediaFileURL = URL(string: "http://frogames.es")
        
        let message = MSMessage()
        
        message.layout = layout
        activeConversation?.insert(message, completionHandler: nil)
        
        
    
    }
    
    
}
